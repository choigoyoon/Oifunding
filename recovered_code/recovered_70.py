[{"unixMs":1741845857588,"generationUUID":"e9e1ce55-ecca-4c8b-9ec9-b2294fdf7d85","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741845922615,"generationUUID":"ba0387b7-78f4-453e-8d54-7f6c9a6cbb7b","type":"composer","textDescription":"응 구동해봐"},{"unixMs":1741845992156,"generationUUID":"6d6352ac-42fc-4b1d-9896-8812ba36c177","type":"composer","textDescription":"종료문제 심볼 문제 해결 해봐."},{"unixMs":1741846038476,"generationUUID":"7a240445-381a-4996-8181-3f4541ef6641","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741846158808,"generationUUID":"e8559cd9-a625-4efc-b009-764d7c5437a7","type":"composer","textDescription":"문제점 파악하라"},{"unixMs":1741846225331,"generationUUID":"1a73111f-c3e4-466d-9c35-5dc2fe222248","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741846295951,"generationUUID":"aa414d7f-1a46-4eff-a200-92b9eee8bff0","type":"composer","textDescription":"해결 하고싶어 차근차근 구조 도와줘"},{"unixMs":1741847277243,"generationUUID":"2b19ff34-be3f-4a66-9384-db600723f776","type":"composer","textDescription":"읽고 지금 에러가 생기는 부분이 어딘지 체크해라"},{"unixMs":1741847515906,"generationUUID":"5c5fd6b8-d63c-4466-9399-cae0051e5f3f","type":"composer","textDescription":"읽고 지금 에러가 생기는 부분이 어딘지 체크해라"},{"unixMs":1741847542868,"generationUUID":"178109dc-558e-490e-bc6e-36d3ea90e1fa","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741847579809,"generationUUID":"828ef1f1-5b22-4a1e-994e-74dbba40576e","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741847821795,"generationUUID":"e63e64ef-3bfc-4df2-a868-c8e4682c4191","type":"composer","textDescription":"data로 수정"},{"unixMs":1741847843490,"generationUUID":"2b331667-3269-460a-9d88-a0256ba891ad","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848092496,"generationUUID":"befc6d0d-d9f8-4698-a7cc-23f3a69ea337","type":"composer","textDescription":"제공하신 코드와 에러 로그를 분석한 결과, 주요 문제는 타임스탬프 범위 오류 발생으로 보입니다. \"Out of bounds nanosecond timestamp: 57166-12-19\" 형태의 에러가 발생하고 있습니다.\n\n## 주요 문제점:\n\n1. **타임스탬프 범위 초과 오류**: \n   - API 응답에서 받은 타임스탬프가 pandas가 처리할 수 있는 범위(1678~2262년)를 초과하는 값을 포함하고 있습니다.\n   - 57166년은 명백히 잘못된 타임스탬프입니다.\n\n2. **FutureWarning 발생**:\n   - `datetime.dt.to_pydatetime()`의 동작이 향후 변경될 예정이라는 경고가 표시됩니다.\n\n## 해결 방안:\n\n1. **타임스탬프 범위 검증**:\n   ```python\n   def sanitize_timestamps(df, column='datetime'):\n       \"\"\"범위를 벗어나는 타임스탬프 제거\"\"\"\n       if column in df.columns:\n           min_timestamp = pd.Timestamp.min.timestamp()\n           max_timestamp = pd.Timestamp.max.timestamp()\n           \n           # Unix timestamp로 변환하여 범위 검사\n           if df[column].dtype != 'datetime64[ns]':\n               df[column] = pd.to_datetime(df[column], errors='coerce')\n           \n           # 범위 밖의 값은 NaT로 변환\n           valid_mask = df[column].notna()\n           timestamps = df.loc[valid_mask, column].view('int64') // 10**9  # nanoseconds to seconds\n           valid_range = (timestamps >= min_timestamp) & (timestamps <= max_timestamp)\n           \n           # 범위 밖의 값을 NaT로 설정\n           invalid_indices = df.loc[valid_mask].index[~valid_range]\n           if len(invalid_indices) > 0:\n               df.loc[invalid_indices, column] = pd.NaT\n               logger.warning(f\"{len(invalid_indices)}개의 유효하지 않은 타임스탬프 제거됨\")\n           \n           # NaT 행 제거\n           df = df.dropna(subset=[column])\n       \n       return df\n   ```\n\n2. **API 응답 처리 개선**:\n   `fetch_oi` 및 `fetch_funding_rate` 함수에서 타임스탬프 처리 부분을 수정:\n\n   ```python\n   def fetch_oi(self, params: Dict) -> pd.DataFrame:\n       # 기존 코드...\n       \n       try:\n           df = pd.DataFrame(data)\n           if 'update' in df.columns and 'value' in df.columns:\n               # 타임스탬프 유효성 검사\n               df['update'] = pd.to_numeric(df['update'], errors='coerce')\n               # 명백히 잘못된 타임스탬프 제외 (현재 기준 +/- 100년)\n               current_ts = time.time()\n               mask = (df['update'] > current_ts - 3650*24*60*60) & (df['update'] < current_ts + 3650*24*60*60)\n               df = df[mask]\n               \n               # 변환\n               df['datetime'] = pd.to_datetime(df['update'], unit='s', errors='coerce')\n               df['oi'] = pd.to_numeric(df['value'], errors='coerce')\n           # 이하 동일...\n   ```\n\n3. **FutureWarning 해결**:\n   `save_data` 메서드에서 타임스탬프 비교 부분을 수정:\n\n   ```python\n   # 수정 전\n   existing_timestamps = set(existing_df['datetime'].dt.to_pydatetime())\n   mask = [dt not in existing_timestamps for dt in df['datetime'].dt.to_pydatetime()]\n   \n   # 수정 후\n   existing_timestamps = set(pd.Series(existing_df['datetime']).astype(str))\n   mask = [str(dt) not in existing_timestamps for dt in df['datetime']]\n   ```\n\n4. **CCXT 데이터와 Coinalyze 데이터 통합 관련 오류**:\n   두 데이터 소스에서 얻은 타임스탬프의 형식이 다를 수 있습니다. 병합 전에 통일된 형식으로 변환하세요.\n\n이 해결책들을 적용하면 타임스탬프 관련 오류를 방지하고 데이터를 안정적으로 처리할 수 있을 것입니다. 특히 `sanitize_timestamps` 함수를 모든 데이터프레임 처리 과정에 추가하여 잘못된 타임스탬프를 일관되게 처리하는 것이 중요합니다.\n\n내용 체크 해볼래?"},{"unixMs":1741848143450,"generationUUID":"8360a969-da74-4daa-8108-9c83cb6ab7d5","type":"composer","textDescription":"제공하신 코드와 에러 로그를 분석한 결과, 주요 문제는 타임스탬프 범위 오류 발생으로 보입니다. \"Out of bounds nanosecond timestamp: 57166-12-19\" 형태의 에러가 발생하고 있습니다.\n\n## 주요 문제점:\n\n1. **타임스탬프 범위 초과 오류**: \n   - API 응답에서 받은 타임스탬프가 pandas가 처리할 수 있는 범위(1678~2262년)를 초과하는 값을 포함하고 있습니다.\n   - 57166년은 명백히 잘못된 타임스탬프입니다.\n\n2. **FutureWarning 발생**:\n   - `datetime.dt.to_pydatetime()`의 동작이 향후 변경될 예정이라는 경고가 표시됩니다.\n\n## 해결 방안:\n\n1. **타임스탬프 범위 검증**:\n   ```python\n   def sanitize_timestamps(df, column='datetime'):\n       \"\"\"범위를 벗어나는 타임스탬프 제거\"\"\"\n       if column in df.columns:\n           min_timestamp = pd.Timestamp.min.timestamp()\n           max_timestamp = pd.Timestamp.max.timestamp()\n           \n           # Unix timestamp로 변환하여 범위 검사\n           if df[column].dtype != 'datetime64[ns]':\n               df[column] = pd.to_datetime(df[column], errors='coerce')\n           \n           # 범위 밖의 값은 NaT로 변환\n           valid_mask = df[column].notna()\n           timestamps = df.loc[valid_mask, column].view('int64') // 10**9  # nanoseconds to seconds\n           valid_range = (timestamps >= min_timestamp) & (timestamps <= max_timestamp)\n           \n           # 범위 밖의 값을 NaT로 설정\n           invalid_indices = df.loc[valid_mask].index[~valid_range]\n           if len(invalid_indices) > 0:\n               df.loc[invalid_indices, column] = pd.NaT\n               logger.warning(f\"{len(invalid_indices)}개의 유효하지 않은 타임스탬프 제거됨\")\n           \n           # NaT 행 제거\n           df = df.dropna(subset=[column])\n       \n       return df\n   ```\n\n2. **API 응답 처리 개선**:\n   `fetch_oi` 및 `fetch_funding_rate` 함수에서 타임스탬프 처리 부분을 수정:\n\n   ```python\n   def fetch_oi(self, params: Dict) -> pd.DataFrame:\n       # 기존 코드...\n       \n       try:\n           df = pd.DataFrame(data)\n           if 'update' in df.columns and 'value' in df.columns:\n               # 타임스탬프 유효성 검사\n               df['update'] = pd.to_numeric(df['update'], errors='coerce')\n               # 명백히 잘못된 타임스탬프 제외 (현재 기준 +/- 100년)\n               current_ts = time.time()\n               mask = (df['update'] > current_ts - 3650*24*60*60) & (df['update'] < current_ts + 3650*24*60*60)\n               df = df[mask]\n               \n               # 변환\n               df['datetime'] = pd.to_datetime(df['update'], unit='s', errors='coerce')\n               df['oi'] = pd.to_numeric(df['value'], errors='coerce')\n           # 이하 동일...\n   ```\n\n3. **FutureWarning 해결**:\n   `save_data` 메서드에서 타임스탬프 비교 부분을 수정:\n\n   ```python\n   # 수정 전\n   existing_timestamps = set(existing_df['datetime'].dt.to_pydatetime())\n   mask = [dt not in existing_timestamps for dt in df['datetime'].dt.to_pydatetime()]\n   \n   # 수정 후\n   existing_timestamps = set(pd.Series(existing_df['datetime']).astype(str))\n   mask = [str(dt) not in existing_timestamps for dt in df['datetime']]\n   ```\n\n4. **CCXT 데이터와 Coinalyze 데이터 통합 관련 오류**:\n   두 데이터 소스에서 얻은 타임스탬프의 형식이 다를 수 있습니다. 병합 전에 통일된 형식으로 변환하세요.\n\n이 해결책들을 적용하면 타임스탬프 관련 오류를 방지하고 데이터를 안정적으로 처리할 수 있을 것입니다. 특히 `sanitize_timestamps` 함수를 모든 데이터프레임 처리 과정에 추가하여 잘못된 타임스탬프를 일관되게 처리하는 것이 중요합니다.\n\n내용 체크 해볼래?"},{"unixMs":1741848196878,"generationUUID":"e42ed041-46f5-4631-91c4-d5e1e009c46d","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848318176,"generationUUID":"4b0d7f8a-5b09-4814-ad08-3109733d18d8","type":"composer","textDescription":"내용 확인해볼래?? "},{"unixMs":1741848367531,"generationUUID":"d66090cf-1cee-40c4-8642-4665d829a7b5","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848394586,"generationUUID":"a3060184-1426-42a1-a7b4-8826aa449aa5","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848464049,"generationUUID":"b0d49d98-a886-4cfd-988a-40e64e54e496","type":"composer","textDescription":"에러부분 먼저체[크하자"},{"unixMs":1741848519691,"generationUUID":"5bb7a92a-ea82-4dd8-b646-503987569b80","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848589871,"generationUUID":"88dcbb39-d0c2-4ed2-94e7-ac6b37f507eb","type":"composer","textDescription":"1. 과거데이터를 가져와서. 신규데이터를 넣는 방식이잖아?\n그러니까 히스토리랑 둘다 있어야겠지 않겠니?"},{"unixMs":1741848639395,"generationUUID":"39e21dd2-560f-48f0-8331-0bb44395e173","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848723615,"generationUUID":"0f885fec-95b2-4fed-b418-5a35def6727e","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848738984,"generationUUID":"4532bfec-16f8-44a2-86ed-9d2fd5044a1b","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741848895239,"generationUUID":"47b4e60d-7da3-4ef8-998f-e696279b4264","type":"composer","textDescription":"에러생기는데???"},{"unixMs":1741848910636,"generationUUID":"456ca692-49b2-4d58-b744-65a059c23b9d","type":"composer","textDescription":"에러생기는데???"},{"unixMs":1741849000784,"generationUUID":"aa503b30-6f88-45fb-be0e-8720b9bfc7f0","type":"composer","textDescription":"에러생기는데???"},{"unixMs":1741849048032,"generationUUID":"cd6785a9-2340-4909-9890-bff4316e00e1","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741849103854,"generationUUID":"2820a612-6eb7-46a7-8605-f75f98e5c2a6","type":"composer","textDescription":"문제점을 파악해봐 현실적으로 가자?"},{"unixMs":1741849187677,"generationUUID":"9bb094c9-db3f-49a1-b08c-7155f81b6316","type":"composer","textDescription":"과거 데이터를 가져올 수 있는 심볼수를 먼저 체크 할 방법있지 않을까?"},{"unixMs":1741849368013,"generationUUID":"0ad83014-9705-4ede-86c9-2298ebfc6d99","type":"composer","textDescription":"타임프레임 에러 안생기게 해서 적용해봐"},{"unixMs":1741849423662,"generationUUID":"ea26aab4-cae1-4ec2-a211-55fc359dada2","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741849593070,"generationUUID":"0214e123-90b7-48a5-baa0-38dd1a938888","type":"composer","textDescription":"timestamp가 왜 57167로 잡히는지 설명하라."},{"unixMs":1741849656227,"generationUUID":"55e95381-fefd-4535-a738-7e0ce8285760","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741849813885,"generationUUID":"2c9aa311-b88f-4dd6-b446-d8e031c59bab","type":"composer","textDescription":"oi값이랑 펀딩비는? nmr.csv.gz 파일 내용 문제가 좀 있지 않을까?"},{"unixMs":1741849863081,"generationUUID":"8717604d-8cf7-4a3b-b07c-e538fa2de3d4","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741850227735,"generationUUID":"ca30415e-0719-4800-b354-dc73156c0bb8","type":"composer","textDescription":"종료 안되는 내용 문제 그리고 파일 열어볼수있는 방식을 모르겠네?"},{"unixMs":1741850330119,"generationUUID":"1ae26539-6566-445b-a933-60af4995ea2d","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741851134859,"generationUUID":"c9bb2220-3c5d-4af7-8dbf-c3fbc333181e","type":"composer","textDescription":"csv.gz가 문제가 있다면 해결해야할것같은데?"},{"unixMs":1741851171884,"generationUUID":"41e633ed-786b-439e-aa5d-8f100fe6ec75","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741851438910,"generationUUID":"691ffc80-1fc4-4dbb-ad4c-652a46a5aea5","type":"composer","textDescription":"종료도 바로안되는것도 해결했어?"},{"unixMs":1741851499899,"generationUUID":"2d665e63-d8f6-4b0c-ad20-8be9461d1b16","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741851660716,"generationUUID":"926cbc5c-bde4-4878-88bd-223400b5b05e","type":"composer","textDescription":"그냥 csv로 저장하자 그리고 api 16개로 돌려써"},{"unixMs":1741852121503,"generationUUID":"c571104d-e73a-47cf-a6a8-6504d2b14068","type":"composer","textDescription":"그냥 csv로 저장하자 그리고 api 16개로 돌려써"},{"unixMs":1741852215536,"generationUUID":"b192611a-a604-48a3-b677-a7bc4052c0a1","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741852365532,"generationUUID":"953788ec-90c7-4ef9-96ca-75efdda568c1","type":"composer","textDescription":"실행해보자"},{"unixMs":1741852553540,"generationUUID":"415b0cb5-4de6-4fe0-88ca-3329971d1f67","type":"composer","textDescription":"@AGLD.csv 데이터를 가져왔는데 과거 전체 데이터를 못가져오는데 방법은 없어?"},{"unixMs":1741852593839,"generationUUID":"c94f2e24-2cae-4a5a-9268-4bba8443122d","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741852825409,"generationUUID":"053a2c57-98ae-4c8f-8cc0-544b3b00d493","type":"composer","textDescription":"내 생각은 api키가 1~16개가 있으니까 1~16번 과거데이터 초기부터 가져오는거야. 한바퀴 돌면 다시 1~16 16000개 데이터를 가져오는 방식으로 모든 심볼을 하고싶어 너의 생각은 어떻게 생각해?\n\n모든 과거데이터를 다가져오면 한번 더 돌려서 최신화 시킨다음에 실시간 데이터랑 타임프레임중에 빠진데이터만 넣는거야. 가능해?"},{"unixMs":1741852871177,"generationUUID":"d532380c-30c5-4fb2-b7ac-021517b4c97c","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741853251691,"generationUUID":"9fd8a3ca-0934-42d9-83b3-562d4fcf8c29","type":"composer","textDescription":"에러발생"},{"unixMs":1741853289492,"generationUUID":"a79c6389-f64d-4fe4-be51-8e2a714f1333","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741853458487,"generationUUID":"804b0929-af56-475b-ad60-ca3e232630d2","type":"composer","textDescription":"에러"},{"unixMs":1741853490007,"generationUUID":"bf096e26-c01d-4e05-8c71-f761020c1709","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741854382744,"generationUUID":"bf2e778b-00ca-4aaf-9493-db0e440cff22","type":"composer","textDescription":"에러발생"},{"unixMs":1741854408528,"generationUUID":"180ffc34-2a7a-4132-8648-757006f20728","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741854999677,"generationUUID":"4a0c1540-8dfb-466f-a077-4246a4325544","type":"composer","textDescription":"갑자기 안되는 이유는?"},{"unixMs":1741855030823,"generationUUID":"fc4276f3-8dcc-4ffe-87ee-8f2874217723","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741855058334,"generationUUID":"77ab6b4f-c4c3-4a72-a99f-c8cd8cff1396","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741855086581,"generationUUID":"9489c2c7-e41b-4d8a-bf3b-4fcc2dbfce41","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741855255823,"generationUUID":"f32cd6a7-4b37-4bfd-ba99-f907bf319c17","type":"composer","textDescription":"체크해봐"},{"unixMs":1741855286895,"generationUUID":"7df25fae-0013-42b8-9a6e-d32ef89a7001","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1741875563121,"generationUUID":"9778a369-0720-4746-8bff-8e79695a70df","type":"composer","textDescription":"이거 코드 다돌면 실시간 데이터 가져오는거야??(질문)"},{"unixMs":1742015668875,"generationUUID":"d0dcf669-4774-427a-acdc-ba9e6812a48b","type":"composer","textDescription":"\n\n이거 무한루프 빠진것같은데??"},{"unixMs":1742015930591,"generationUUID":"57506e71-3930-406c-a84b-25d817e47619","type":"composer","textDescription":"있는 내용은 빼고 가져와야할것같은데? 계속 덮어쓰기 하는것은 비효율적이야.."},{"unixMs":1742016049049,"generationUUID":"a9a3e00a-7cef-4201-bc05-cbe12b800908","type":"composer","textDescription":"먼저 검사해야하는게 타임프레임상 빠진게 있는지 체크해야한다.\n그뒤에 빠진부분을 채워야한다.\n다 채운이후는 1분마다 실시간 데이터를 가져오는 로직구조이다.\n\napi 키 16개를 순차적으로 돌릴 생각이니. 그런 개념으로 구조를 변경가능한지 확인만 먼저하자."},{"unixMs":1742016133692,"generationUUID":"6eeeead9-41fa-49b2-aef8-2ba48f83a5b4","type":"composer","textDescription":"응 적용해보자."},{"unixMs":1742016225514,"generationUUID":"d98cb299-27f3-452a-af9a-7ea9b5cd286d","type":"composer","textDescription":"먼저 검사해야하는게 타임프레임상 빠진게 있는지 체크해야한다.\n그뒤에 빠진부분을 채워야한다.\n다 채운이후는 1분마다 실시간 데이터를 가져오는 로직구조이다.\n\napi 키 16개를 순차적으로 돌릴 생각이니. 그런 개념으로 구조를 변경가능한지 확인만 먼저하자."},{"unixMs":1742016358720,"generationUUID":"db07ff6b-1470-4b49-862c-ac7804b2e917","type":"composer","textDescription":"다음"},{"unixMs":1742016418298,"generationUUID":"54ecf628-ccc6-4bbe-8a7b-6c9226a46d76","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742016540028,"generationUUID":"6e1327ca-92d0-4441-935e-3bf92b9085b8","type":"composer","textDescription":"실행해보자"},{"unixMs":1742017480885,"generationUUID":"c471e74e-88ae-41a2-bf35-9d8d371132c5","type":"composer","textDescription":"보니까 1개 코인을 1분씩 돌리는데 그러지 않고 모든코인을 순차적으로 돌리신거"},{"unixMs":1742017532624,"generationUUID":"a18bd211-ab2b-49af-8618-be9305b2de18","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742017581855,"generationUUID":"6bbf3f92-831c-4326-8e5f-1cb9e6f51277","type":"composer","textDescription":"응 구동시켜봐"},{"unixMs":1742017742491,"generationUUID":"ff4d00cb-1dfd-4ac3-b1a6-c919cdab1371","type":"composer","textDescription":"누락구간 찾고 저장하고 누락구간찾고 저장하고 이런걸 api16개 키를 돌아가면서 진행하자는거야. 현재 상황은 너무 비효율적이야. "},{"unixMs":1742017782228,"generationUUID":"91f6cf05-bab7-4af2-a69e-6b52d8d75de0","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742103817090,"generationUUID":"78e1d127-6041-4ca7-9364-c77e033d140d","type":"composer","textDescription":"\n이거 exe화 시키는게 좋겠다"},{"unixMs":1742103997880,"generationUUID":"14e01d0f-8e14-4511-b215-5cc4b0c9982a","type":"composer","textDescription":"exe파일을 실행시키면 어디에 데이터를 저장하는가??"},{"unixMs":1742104028615,"generationUUID":"41559cbb-9ad2-47d3-a904-cf44e0c05bd2","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742104533303,"generationUUID":"98dcee9e-852c-4aa2-ad62-b26c3b4d0a80","type":"composer","textDescription":"야 이거 코드 또 사라졌다?"},{"unixMs":1742104589964,"generationUUID":"d4cf8461-0c25-4b2f-a7fa-344cadd44eb8","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742104720397,"generationUUID":"55ae0c23-51e1-4551-b9a5-1654578d609f","type":"composer","textDescription":"@crypto_data_manager_v3.py 이거보다 데이터가 더있었는데??"},{"unixMs":1742104782540,"generationUUID":"be1688c1-5fd6-4f56-b683-f5de45590dbc","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742104861546,"generationUUID":"cb6ab7bf-e2be-4207-a69e-adcf41d290d5","type":"composer","textDescription":"1분마다 csv파일 다가져오는거 맞아?"},{"unixMs":1742112642815,"generationUUID":"9ee06caf-88ae-465c-8e2c-723c466ab14b","type":"composer","textDescription":"이걸로 ohlcv 랑 OI 펀딩비 를 1분마다 검사하고 가져올 수 있는거야??"},{"unixMs":1742112698226,"generationUUID":"c0bee353-6261-465d-b5fd-9fa45653dd3d","type":"apply","textDescription":"crypto_data_manager_v3.py"},{"unixMs":1742113087019,"generationUUID":"e0e99d2e-f369-44ec-803e-a15d3475b240","type":"composer","textDescription":"무슨변경사항이냐 원래 만들던거잖아\n\ndata/data 안에 있는 csv 파일 보고 저걸 실시간으로 가져오려면 어떻게 코드짜야하는지 생각하라"},{"unixMs":1742113194492,"generationUUID":"2c92e9c5-f0dc-4843-ba4d-43fce2992a31","type":"apply","textDescription":"real_time_data_reader.py"},{"unixMs":1742113251682,"generationUUID":"8fc9eb09-6616-4622-92d9-b57a09c80cd8","type":"composer","textDescription":"아니면 exe 파일 py 파일로 변환하던지. 근데 왜 자꾸 너랑 코딩짜다가 저장된 py파일이 삭제되는경우가 발생하는지 설명해봐"},{"unixMs":1742113325799,"generationUUID":"e790f7c2-7ce0-4690-a56a-ee79e364e945","type":"apply","textDescription":"file_backup_manager.py"},{"unixMs":1742113382720,"generationUUID":"bc3bbc8f-7c6b-44e4-af1b-00c385684d8f","type":"composer","textDescription":"임시저장하지말고 그냥 저장하면안되?"},{"unixMs":1742113411552,"generationUUID":"a9ee7a4b-d040-426e-ae3a-174860928886","type":"apply","textDescription":"file_saver.py"},{"unixMs":1742113445547,"generationUUID":"dde2815f-e0c9-484c-acd5-df2fcef24dd8","type":"composer","textDescription":"아니 그거 커서에서 설정변경으로 안되냐?"},{"unixMs":1742127671756,"generationUUID":"940ca53d-adeb-44aa-b30b-63d8263f40e7","type":"composer","textDescription":"exe 파일을 py 파일로 가져오는법"},{"unixMs":1742127752610,"generationUUID":"aabf9ea1-78c2-4a41-a5d9-65477d2ebd92","type":"composer","textDescription":"그럼 임시저장파일로 커서에서 날라간 내용은 어떻게 복구할래??"},{"unixMs":1742127904317,"generationUUID":"8ca2b9d4-047e-4c62-aaa1-c106636ae355","type":"apply","textDescription":"cursor_recovery.py"},{"unixMs":1742128005736,"generationUUID":"f7fc4045-40a4-4abb-8c91-8a27647cfbc3","type":"composer","textDescription":"어디폴더인데 이건"},{"unixMs":1742128109807,"generationUUID":"0c7bf4b4-481b-462e-b366-3892847e3d6a","type":"composer","textDescription":"??"},{"unixMs":1742128536322,"generationUUID":"a16f5ab2-9921-4519-94a7-ca1f66058b2a","type":"apply","textDescription":"recover_from_vscdb.py"}]